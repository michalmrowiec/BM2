<MudDialog>
    <TitleContent>
        @DialogTitle
    </TitleContent>
    <DialogContent>
        @if (BodyContent is not null)
        {
            @BodyContent
        }
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="@(async () => await Cancel())">Cancel</MudButton>
        <MudButton Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto"
                   OnClick="@(async () => await Submit())">@_confirmTextDictionary[ConfirmButtonText]
        </MudButton>
    </DialogActions>
</MudDialog>

@code {
    [Parameter] public IMudDialogInstance MudDialog { get; set; }
    [Parameter] public string DialogTitle { get; set; } = string.Empty;
    [Parameter] public List<EventCallback>? FuncsOnCreated { get; set; } = new();
    [Parameter] public List<EventCallback>? FuncsOnCancel { get; set; } = new();
    [Parameter] public RenderFragment? BodyContent { get; set; }
    [Parameter] public ConfirmText ConfirmButtonText { get; set; } = ConfirmText.Ok;

    private Dictionary<ConfirmText, string> _confirmTextDictionary = new Dictionary<ConfirmText, string>()
    {
        { ConfirmText.Add, "Add" },
        { ConfirmText.Update, "Update" },
        { ConfirmText.Delete, "Delete" },
        { ConfirmText.Ok, "Ok" }
    };

    private async Task Cancel()
    {
        FuncsOnCancel?.ForEach(async x => await x.InvokeAsync());
    }


    private async Task Submit()
    {
        FuncsOnCreated?.ForEach(async x => await x.InvokeAsync());
    }

    public enum ConfirmText
    {
        Add,
        Update,
        Delete,
        Ok
    }

}