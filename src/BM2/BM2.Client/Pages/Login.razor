@page "/login"
@using Newtonsoft.Json
@using System.Text
@using BM2.Client.VMs
@inject ISnackbar Snackbar
@inject HttpClient HttpClient
@inject IAlertService AlertService
@inject IAuthService AuthService
@inject NavigationManager Navigation

<div style="display: flex; justify-content: center; align-items: center; height: 75vh;">
    <MudCard Class="pa-4" Style="width: 400px;">
        <MudCardContent>
            <MudText Typo="Typo.h5" Align="Align.Center" Class="mb-8">BM2</MudText>
            <MudForm @ref="_form" @onkeypress="HandleKeyPress" Spacing="4">
                <MudTextField @bind-Value="_loginModel.EmailAddress"
                              Label="Email address"
                              Variant="Variant.Filled"
                              Margin="Margin.Dense"
                              Required
                              Immediate
                              For="@(() => _loginModel.EmailAddress)"
                              AutoFocus/>

                <MudTextField @bind-Value="_loginModel.Password"
                              Label="Password"
                              Variant="Variant.Filled"
                              Margin="Margin.Dense"
                              InputType="InputType.Password"
                              Required
                              Immediate
                              For="@(() => _loginModel.Password)"/>

                <MudSpacer/>
                <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="LogIn">
                    Login
                </MudButton>
                <a style="align-self: flex-end;" href="/register">Register</a>
            </MudForm>
        </MudCardContent>
    </MudCard>
</div>


@code {
    private MudForm _form;
    private UserLoginVM _loginModel = new UserLoginVM();

    private async Task LogIn()
    {
        var postJson = new StringContent(JsonConvert.SerializeObject(_loginModel), Encoding.UTF8, "application/json");

        using var request = new HttpRequestMessage(HttpMethod.Post, @"api/v1/User/login");
        request.Content = postJson;

        var response = await HttpClient.SendAsync(request);

        if (response.IsSuccessStatusCode)
        {
            var content = await response.Content.ReadAsStringAsync();
            var logedUser = JsonConvert.DeserializeObject<LogedUser>(content);
            await AuthService.Login(logedUser);
            Navigation.NavigateTo("/", true);
        }
        else
        {
            await response.HandleFailure(AlertService);
        }
    }

    private async Task HandleKeyPress(KeyboardEventArgs e)
    {
        if (e.Key == "Enter")
        {
            await LogIn();
        }
    }

}
